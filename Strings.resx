<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IconHelp" xml:space="preserve">
    <value>The icon for the station, if you don't use a custom one. It can be any UIIcon record.</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="StationNameHelp" xml:space="preserve">
    <value>Controls the name of your station that will be displayed in the game. Special characters are escaped properly.</value>
  </data>
  <data name="NoExeFound" xml:space="preserve">
    <value>The path to the Cyberpunk 2077 executable has not been set.\nPlease set it now.</value>
  </data>
  <data name="NoGamePath" xml:space="preserve">
    <value>No Game Path</value>
  </data>
  <data name="RadioExtPathPlaceholder" xml:space="preserve">
    <value>&lt;no path set; radioExt is not installed&gt;</value>
  </data>
  <data name="BackupPathPlaceholder" xml:space="preserve">
    <value>&lt;no path set; radio stations will NOT be backed up&gt;</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="NonCyberpunkExe" xml:space="preserve">
    <value>The selected file did not look like Cyberpunk 2077. Please try again.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="GameBasePath" xml:space="preserve">
    <value>Game Base Path</value>
  </data>
  <data name="RadioStationPath" xml:space="preserve">
    <value>Radio Stations Path</value>
  </data>
  <data name="BackUpPath" xml:space="preserve">
    <value>Back Up Path</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="GameBasePathPlaceholder" xml:space="preserve">
    <value>&lt;no path set; game executable missing&gt;</value>
  </data>
  <data name="DotDotDot" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="GamePaths" xml:space="preserve">
    <value>Game Paths</value>
  </data>
  <data name="MainTitle" xml:space="preserve">
    <value>Cyber Radio Assistant</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="RefreshStations" xml:space="preserve">
    <value>Refresh Stations</value>
  </data>
  <data name="HowToUse" xml:space="preserve">
    <value>How To Use</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="NewStation" xml:space="preserve">
    <value>New Station</value>
  </data>
  <data name="DeleteStation" xml:space="preserve">
    <value>Delete Station</value>
  </data>
  <data name="DisplayAndIcon" xml:space="preserve">
    <value>Display and Icon</value>
  </data>
  <data name="Music" xml:space="preserve">
    <value>Music</value>
  </data>
  <data name="BackupPathHelp" xml:space="preserve">
    <value>Select the path to backup custom radio stations to.</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="Display" xml:space="preserve">
    <value>Display</value>
  </data>
  <data name="CustomIcon" xml:space="preserve">
    <value>Custom Icon</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Icon" xml:space="preserve">
    <value>Icon:</value>
  </data>
  <data name="Using?" xml:space="preserve">
    <value>Using?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="InkAtlasPath" xml:space="preserve">
    <value>Ink Atlas Path:</value>
  </data>
  <data name="InkAtlasPart" xml:space="preserve">
    <value>Ink Atlas Part:</value>
  </data>
  <data name="FM" xml:space="preserve">
    <value>FM:</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>Volume:</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value:</value>
  </data>
  <data name="Min" xml:space="preserve">
    <value>Min:</value>
  </data>
  <data name="Max" xml:space="preserve">
    <value>Max:</value>
  </data>
  <data name="UseStream" xml:space="preserve">
    <value>Use Stream?</value>
  </data>
  <data name="StreamURL" xml:space="preserve">
    <value>Stream URL:</value>
  </data>
  <data name="GetURLFromRadioGarden" xml:space="preserve">
    <value>Get URL from Radio Garden</value>
  </data>
  <data name="URLHint" xml:space="preserve">
    <value>(Ctrl + V) - Paste Radio Garden URL here</value>
  </data>
  <data name="StreamSettings" xml:space="preserve">
    <value>Stream Settings</value>
  </data>
  <data name="CustomIconHelp" xml:space="preserve">
    <value>Specifies whether or not you want to use a custom icon for the radio station.</value>
  </data>
  <data name="InkPathHelp" xml:space="preserve">
    <value>Points to the .inkatlas that holds the icon texture.</value>
  </data>
  <data name="InkPartHelp" xml:space="preserve">
    <value>Specifies which part of the .inkatlas should be used for the icon, e.g., gryphon_5</value>
  </data>
  <data name="FMHelp" xml:space="preserve">
    <value>Used to place the station at the right place in the stations list. If the station name has an FM number, it should be the same.</value>
  </data>
  <data name="VolumeHelp" xml:space="preserve">
    <value>Overall volume multiplier for the station. Make sure all songs have the same volume, then adjust the overall volume of the station with this value to match up with vanilla stations.</value>
  </data>
  <data name="VolumeValHelp" xml:space="preserve">
    <value>The currently selected volume. Use the slider or double click value to change.</value>
  </data>
  <data name="UseStreamHelp" xml:space="preserve">
    <value>Indicates if this station should use a web stream for its audio source.</value>
  </data>
  <data name="StreamURLHelp" xml:space="preserve">
    <value>The URL of the web stream to use.</value>
  </data>
  <data name="RadioGardenBtnHelp" xml:space="preserve">
    <value>Press to get a box where you can paste a URL from radio.garden and parse the final web stream.</value>
  </data>
  <data name="OpenURLErrorOccured" xml:space="preserve">
    <value>An error occurred while trying to open the URL: </value>
  </data>
  <data name="RadioExtGithub" xml:space="preserve">
    <value>radioExt GitHub</value>
  </data>
  <data name="RadioExtNexusMods" xml:space="preserve">
    <value>radioExt on NexusMods</value>
  </data>
  <data name="NoStationsYet" xml:space="preserve">
    <value>No Stations Yet!</value>
  </data>
  <data name="NewStationListBoxEntry" xml:space="preserve">
    <value>[New Station]</value>
  </data>
  <data name="AddSongsToolStrip" xml:space="preserve">
    <value>Add Song(s)</value>
  </data>
  <data name="RemoveSongsToolStrip" xml:space="preserve">
    <value>Remove Selected Song(s)</value>
  </data>
  <data name="SongNameHeader" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SongLengthHeader" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="SongFileSizeHeader" xml:space="preserve">
    <value>File Size</value>
  </data>
</root>